import numpy as npimport tensorflow as tfimport pandas as pdimport matplotlib.pyplot as pltfrom keras.layers import Dense,Convolution2D,Flatten,Dense,Dropout,MaxPool2Dfrom keras.models import Sequentialfrom keras.layers import BatchNormalizationfrom keras.layers import Activationdataset = pd.read_csv('fashion-mnist_train.csv')X=dataset.iloc[:,1:].valuesy=dataset.iloc[:,0].valuesX=X/255.X=np.reshape(X,(-1,28,28,1))from sklearn.preprocessing import OneHotEncoderfrom sklearn.compose import ColumnTransformeronehot=OneHotEncoder()y=y.reshape(-1,1)y = onehot.fit_transform(y).toarray()model=Sequential()model.add(Convolution2D(input_shape=(28,28,1),filters=16,kernel_size=(3,3)))model.add(BatchNormalization())model.add(Activation('relu'))model.add(MaxPool2D())model.add(Convolution2D(filters=16,kernel_size=(3,3)))model.add(BatchNormalization())model.add(Activation('relu'))model.add(MaxPool2D())model.add(Flatten())model.add(Dense(units=100,activation='relu'))model.add(Dropout(0.2))model.add(Dense(10,activation='softmax'))#model.summary()model.compile(loss='categorical_crossentropy',              optimizer='adam',              metrics=['accuracy'])model.fit(X,y,batch_size=100,epochs=5,validation_split=0.33,verbose=1,)